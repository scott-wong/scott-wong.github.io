<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">scott-wong/岛民宇哥</title>
    <subtitle type="html">scott-wong/岛民宇哥的个人网站，最近专注企业架构和云原生技术体系。</subtitle>
    <updated>2020-04-10T18:23:26+08:00</updated>
    <id>https://scott-wong.ga/</id>
    <link rel="alternate" type="text/html" href="https://scott-wong.ga/" />
    <link rel="self" type="application/atom+xml" href="https://scott-wong.ga/atom.xml" />
    <author>
            <name>scott-wong/岛民宇哥</name>
            <uri>https://scott-wong.ga/</uri>
            
                <email>wyuleo@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.68.3">Hugo</generator>
        <entry>
            <title type="text">交付项目实施方法论</title>
            <link rel="alternate" type="text/html" href="https://scott-wong.ga/posts/pm-methodology/" />
            <id>https://scott-wong.ga/posts/pm-methodology/</id>
            <updated>2020-04-10T18:23:23+08:00</updated>
            <published>2020-04-02T17:05:58+08:00</published>
            <author>
                    <name>scott-wong/岛民宇哥</name>
                    <uri>https://scott-wong.ga</uri>
                    <email>wyuleo@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    
    <summary type="html"><![CDATA[最近看CGAF体会是各个体系架构都是互相借鉴融合发展的，这些年做了很多项目，根据经验……]]></summary>
            
                <content type="html"><![CDATA[<p>最近看CGAF体会是各个体系架构都是互相借鉴融合发展的，这些年做了很多项目，根据经验也通过融合+裁剪总结出一套项目实施方法论，适用性如何还请各位看官品评。</p>
<p>敏捷项目管理+BPMN+C4模型(七种图)+UML(用例图、状态图、时序图、类图、活动图、E-R图)。</p>
<h3 id="uml使用场景基于java开发手册修改">UML使用场景（基于《Java开发手册》修改）：</h3>
<ul>
<li>用例图<br>
【强制】在需求分析阶段，如果与系统交互的 User 超过一类并且相关的 User Case 超过 5 个，使用用例图来表达更加清晰的结构化需求。</li>
<li>状态图<br>
【强制】如果某个业务对象的状态超过 3 个，使用状态图来表达并且明确状态变化的各个触
发条件。</li>
<li>时序图(可用C4动态图替代)<br>
【强制】如果系统中某个功能的调用链路上的涉及对象超过 3 个，使用UML时序图/C4动态图来表达并且明确各调用环节的输入与输出。</li>
<li>类图<br>
【强制】如果系统中模型类超过 5 个，并且存在复杂的依赖关系，使用UML类图来表达并且明确类之间的关系。</li>
<li>活动图(可用BPMN流程图替代)<br>
【强制】如果系统中超过 2 个对象之间存在协作关系，并且需要表示复杂的处理流程，使用UML活动图/BPMN流程图来表示。</li>
</ul>
<h3 id="入门">入门</h3>
<p>快速熟悉<a href="https://c4model.com/">C4模型</a></p>
]]></content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/" term="项目管理" label="项目管理" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/" term="项目管理" label="项目管理" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">企业架构系列：开发规范</title>
            <link rel="alternate" type="text/html" href="https://scott-wong.ga/posts/dev_guideline/" />
            <id>https://scott-wong.ga/posts/dev_guideline/</id>
            <updated>2020-04-10T18:23:23+08:00</updated>
            <published>2020-04-01T09:38:36+08:00</published>
            <author>
                    <name>scott-wong/岛民宇哥</name>
                    <uri>https://scott-wong.ga</uri>
                    <email>wyuleo@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    
    <summary type="html"><![CDATA[企业架构系列：开发规范 版本号 【强制】版本号遵循 SemVer 2 标准 语义化版本 2.0.0 版本格式：主版本号……]]></summary>
            
                <content type="html"><![CDATA[<h1 id="企业架构系列开发规范">企业架构系列：开发规范</h1>
<h2 id="版本号">版本号</h2>
<p>【强制】版本号遵循 <a href="https://semver.org/">SemVer 2 标准</a></p>
<p><strong>语义化版本 2.0.0</strong><br>
版本格式：主版本号.次版本号.修订号，版本号递增规则如下：</p>
<ul>
<li>主版本号：当你做了不兼容的 API 修改，</li>
<li>次版本号：当你做了向下兼容的功能性新增，</li>
<li>修订号：当你做了向下兼容的问题修正。</li>
</ul>
<p>先行版本号及版本编译元数据可以加到“主版本号.次版本号.修订号”的后面，作为延伸。</p>
<h2 id="文档格式">文档格式</h2>
<p>【推荐】Markdown格式<br>
tips:
md转word</p>
<ul>
<li>使用VSCode的Markdown预览，直接复制到Word里，保持格式。</li>
<li><a href="http://www.writage.com">writage插件</a></li>
</ul>
<h2 id="架构设计规范">架构设计规范</h2>
<h3 id="togaf">TOGAF</h3>
<h2 id="后端开发规范">后端开发规范</h2>
<h3 id="java">Java</h3>
<p>【强制】<a href="https://developer.aliyun.com/special/tech-java">《Java开发手册》</a>,当前最新版1.5.0<br>
【强制】IDEA插件<a href="https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines">Alibaba Java Coding Guidelines</a></p>
<h2 id="前端开发规范">前端开发规范</h2>
<h3 id="vue">Vue</h3>
<p><a href="https://www.jianshu.com/p/8b095857f73e">Vue前端开发规范</a></p>
<h2 id="数据传输规范">数据传输规范</h2>
<h3 id="日期时间字段">日期时间字段</h3>
<p>使用ISO 8601-1：2019规范中的扩展格式，如日期时间组合的格式为</p>
<pre><code>2020-04-01T09:38:36+08:00
</code></pre>]]></content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/categories/%E6%9E%B6%E6%9E%84/" term="架构" label="架构" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/" term="开发规范" label="开发规范" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">企业架构系列：业务架构</title>
            <link rel="alternate" type="text/html" href="https://scott-wong.ga/posts/ea-ba/" />
            <id>https://scott-wong.ga/posts/ea-ba/</id>
            <updated>2020-04-10T18:23:23+08:00</updated>
            <published>2020-03-27T10:05:10+08:00</published>
            <author>
                    <name>scott-wong/岛民宇哥</name>
                    <uri>https://scott-wong.ga</uri>
                    <email>wyuleo@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html"><![CDATA[CGAF包括业务架构、数据架构、应用架构、技术及基础设施架构、安全架构。 working...]]></summary>
            
                <content type="html"><![CDATA[<p>CGAF包括业务架构、数据架构、应用架构、技术及基础设施架构、安全架构。
working...</p>
]]></content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/categories/%E6%9E%B6%E6%9E%84/" term="架构" label="架构" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">企业架构系列：从CNCF云原生全景图里做技术选型</title>
            <link rel="alternate" type="text/html" href="https://scott-wong.ga/posts/cncf-landscope/" />
            <id>https://scott-wong.ga/posts/cncf-landscope/</id>
            <updated>2020-04-10T18:23:23+08:00</updated>
            <published>2020-03-25T17:54:08+08:00</published>
            <author>
                    <name>scott-wong/岛民宇哥</name>
                    <uri>https://scott-wong.ga</uri>
                    <email>wyuleo@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    
    <summary type="html"><![CDATA[从全局视角了解云原生生态可以直接看CNCF全景图，截止2020年3月25日已有1,3……]]></summary>
            
                <content type="html"><![CDATA[<p>从全局视角了解云原生生态可以直接看<a href="https://landscape.cncf.io/">CNCF全景图</a>，截止2020年3月25日已有1,359个图标。包含应用定义与开发层（App Definition and Development）、编排与治理层（Orchestration Management）、运行时层（Runtime）、供应保障层（Provisioning）、云服务商（Special）、平台（Platform）、观察与分析（Observability and Analysis）、无服务（Serverless）和CNCF成员（Members）八个层次。<br>
<img src="/images/cncf-landscope.png" alt="CNCF全景图"></p>
<p>Writing...</p>
]]></content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/categories/%E6%9E%B6%E6%9E%84/" term="架构" label="架构" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/" term="云原生" label="云原生" />
                            
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/cncf/" term="CNCF" label="CNCF" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">企业架构系列：云原生基础设施选型</title>
            <link rel="alternate" type="text/html" href="https://scott-wong.ga/posts/cloud-native-selection/" />
            <id>https://scott-wong.ga/posts/cloud-native-selection/</id>
            <updated>2020-04-10T18:23:23+08:00</updated>
            <published>2020-03-25T09:56:21+08:00</published>
            <author>
                    <name>scott-wong/岛民宇哥</name>
                    <uri>https://scott-wong.ga</uri>
                    <email>wyuleo@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    
    <summary type="html"><![CDATA[企业架构系列：云原生基础设施选型 为了降低企业IT综合成本，企业全面上云已是大势所趋，……]]></summary>
            
                <content type="html"><![CDATA[<h1 id="企业架构系列云原生基础设施选型">企业架构系列：云原生基础设施选型</h1>
<p>为了降低企业IT综合成本，企业全面上云已是大势所趋，但是上云路径多种多样，尽管公有云优势明显，但因监管需要、数据安全等因素，大公司很多仍倾向自建私有云或混合云，不希望被单一公有云捆绑。<br>
近年来云原生架构日趋成熟，常用的k8s+docker+devops工具即可搭建，但是在私有云上自建维护一套这样的云原生基础设施绝非易事，通常需要成立独立的团队维护。<br>
本文基于作者多年跨行业项目实践经验和数月来的研究提出云原生基础设施的选型建议，主要面向有私有云部署需求的公司，小公司建议直接上公有云。<br>
毕竟每家公司的组织结构和业务技术需求千差万别，文中的选型也没法做到面面俱到，如有疏漏和错误，敬请指正。</p>
<hr>
<h2 id="云原生生态图">云原生生态图</h2>
<p>从全局视角了解云原生生态可以直接看<a href="https://landscape.cncf.io/">CNCF全景图</a>，截止2020年3月25日已有1,359个图标。包含应用定义与开发层（App Definition and Development）、编排与治理层（Orchestration Management）、运行时层（Runtime）、供应保障层（Provisioning）、云服务商（Special）、平台（Platform）、观察与分析（Observability and Analysis）、无服务（Serverless）和CNCF成员（Members）八个层次。<br>
<img src="/images/cncf-landscope.png" alt="CNCF全景图">
作者并没有全面研究每个层级，下面仅列出日常用到的产品或工具，下篇文章计划按全景图的层级划分重新梳理选型。</p>
<h2 id="1-选型清单">1. 选型清单</h2>
<ul>
<li>企业架构设计：TOGAF + <a href="https://c4model.com/">C4模型</a></li>
<li>敏捷项目管理工具&amp;知识共享：<a href="https://www.tapd.cn/">TAPD</a></li>
<li>容器管理平台：<a href="https://kubesphere.com.cn/">Kubesphere</a></li>
<li>镜像仓库&amp;镜像安全：Harbor + Clair</li>
<li>代码管理工具&amp;代码评审：Gitlab</li>
<li>CI/CD工具：Kubesphere集成的Jenkins流水线</li>
<li>代码质量扫描工具：Kubesphere集成的SonarQube</li>
<li>应用定义工具：Kubesphere集成的Helm</li>
<li>APM&amp;调用链追踪：SkyWalking</li>
</ul>
<h2 id="2-具体选型逻辑">2. 具体选型逻辑</h2>
<h3 id="21-企业架构设计togaf--c4模型httpsc4modelcom">2.1 企业架构设计：TOGAF + <a href="https://c4model.com/">C4模型</a></h3>
<p><strong>TOGAF</strong><br>
关于企业架构（EA）设计业界主要有美国联邦政府体系架构框架FEA(F)、美国国防部体系架构框架（DoDAF）和开放组织体系架构框架（TOGAF），目前各个框架在发展过程中都在互相借鉴。针对企业市场TOGAF更加适合而且适合按需裁剪。另外电子政务从业者建议看下《电子政务顶层设计理论、方法与实践》这本书，该书作者结合TOGAF等框架和中国电子政务特色提出了CGAF框架。
TOGAF的核心是架构开发方法ADM，计划独立成文描述TOGAF在敏捷项目交付的实践。<br>
<img src="/images/togaf-adm.png" alt="ADM开发方法"><br>
<strong>C4模型</strong><br>
工作中经常会与业务和技术人员沟通架构设计，发现每个人画出来的架构图都不同，尤其在敏捷开发盛行的当下，架构文档在大幅缩减，很多人已经弃用UML。最近发现C4模型能很好的描述软件架构，而且容易上手易于理解。
C4模型是Simon Brown创建，目前欧美用的比较多，国内相关使用案例找到的不多。但是作者认为可以在项目团队中广泛使用。<br>
C4 代表上下文（Context）、容器（Container）、组件（Component）和代码（Code）——一系列分层的图表，可以用这些图表来描述不同缩放级别的软件架构，每种图表都适用于不同的受众。可以将其视为代码的地图。
C4包含四种核心图和三种附加图：</p>
<ul>
<li>系统上下文图(System Context diagram)</li>
<li>容器图(Container diagram)</li>
<li>组件图(Component diagram)</li>
<li>代码图(Code diagram), 使用UML类图、实体关系图等，通常不需要画，IDE生成即可</li>
<li>系统全景图(System Landscape diagram)</li>
<li>动态图(Dynamic diagram), 类似UML通讯图，可让初级开发人员在写代码前画出来评估，避免后期才发现错误</li>
<li>部署图(Deployment diagram), 可用于开发与运维沟通
详细内容可访问C4模型官网，介绍的很清楚，具体画图可用我基于RicardoNiepel/C4-PlantUML优化的<a href="https://github.com/scott-wong/C4-PlantUML">C4-PlantUML</a>或者使用draw.io+<a href="https://tobiashochguertel.github.io/c4-draw.io/c4.js">C4插件</a>.<br>
<img src="/images/c4-overview.png" alt="C4模型概览"></li>
</ul>
<h3 id="22-敏捷项目管理工具tapdhttpswwwtapdcn">2.2 敏捷项目管理工具：<a href="https://www.tapd.cn/">TAPD</a></h3>
<p>备选：有独立部署需求选<a href="https://www.zentao.net/">禅道</a><br>
TAPD的优势</p>
<ul>
<li>提供轻量协作、敏捷研发完整支持</li>
<li>跨端支持，集成企业微信</li>
<li>文档和Wiki可用于知识共享
企业版有DevOps功能，这个禅道开源版有提供，可按需选择。</li>
</ul>
<h3 id="23-容器管理平台kubespherehttpskubespherecomcn">2.3 容器管理平台<a href="https://kubesphere.com.cn/">Kubesphere</a></h3>
<p>备选：Rancher<br>
Kubesphere和Rancher都是开源产品，Rancher相对成熟些，案例比较多，不过Kubesphere相比Rancher提供了针对开发人员更友好的界面操作并深度集成Jenkins、SonarQube等CI/CD工具，同时提供统一日志、统一监控告警等功能。
当前版本2.1.1已生产可用，据说光大银行在测试Kubesphere。
Kubesphere优势</p>
<ul>
<li>通过Helm快速部署mysql、redis等应用</li>
<li>集成应用商店openpitrix，可上传自有应用</li>
<li>统一日志、统一监控告警</li>
</ul>
<h3 id="24-代码管理工具代码评审gitlab">2.4 代码管理工具&amp;代码评审：Gitlab</h3>
<p>备选：Gitee, Github<br>
代码管理没多少选择，自建Gitlab开源版提供的功能够用了。
代码审查还有Gerrit可选，不过Gitlab也能通过merge request进行代码评审，而且更符合开发人员习惯。</p>
<h3 id="25-cicd工具kubesphere集成的jenkinssonarqube流水线">2.5 CI/CD工具：Kubesphere集成的Jenkins+SonarQube流水线</h3>
<p>在代码目录配置Jenkinsfile，通过Kubesphere实现自动拉取代码并构建maven, nodejs等项目工程，代码质量扫描，自动构建成Docker镜像并发布到指定k8s集群中。
典型Java项目的Jenkinsfile如下：</p>
<pre><code>pipeline {
    agent {
        node {
            label 'maven'
        }
    }

    parameters {
        string(name:'TAG_NAME',defaultValue: '',description:'')
    }

    environment {
        // app label
        PROJECT = 'ry'
        NAMESPACE = 'cargo-dev'
        // 服务唯一标识
        APP_NAME = 'ruoyi-api'
        // 项目git地址，用于push with tag
        GIT_URL = 'gitee.com/scott-wong/RuoYi-Vue.git'

        // 以下是devops公共配置
        // 镜像密钥，官方dockerhub-cr，阿里云aliyun-cr
        DOCKER_SECRETS = 'aliyun-cr'
        GIT_CREDENTIAL_ID = 'gitee-id'
        KUBECONFIG_CREDENTIAL_ID = 'cargo-kubeconfig'
        // 阿里云镜像用aliyun-id
        DOCKER_CREDENTIAL_ID = 'aliyun-id'
        // 阿里云registry.cn-hangzhou.aliyuncs.com
        REGISTRY = 'registry.cn-hangzhou.aliyuncs.com'
        // 阿里云scottwong
        DOCKERHUB_NAMESPACE = 'scottwong'
        // 代码检测
        SONAR_CREDENTIAL_ID= 'sonar-token'
    }

    stages {
        stage ('checkout scm') {
            steps {
                checkout(scm)
            }
        }

        stage ('unit test') {
            steps {
                container ('maven') {
                    sh 'cd ruoyi &amp;&amp; mvn clean test'
                }
            }
        }

        stage('sonarqube analysis') {
            steps {
                container ('maven') {
                    withCredentials([string(credentialsId: &quot;$SONAR_CREDENTIAL_ID&quot;, variable: 'SONAR_TOKEN')]) {
                        withSonarQubeEnv('sonar') {
                            sh &quot;cd ruoyi &amp;&amp; mvn sonar:sonar -Dsonar.java.binaries=target/classes -Dsonar.branch=$BRANCH_NAME -Dsonar.login=$SONAR_TOKEN&quot;
                        }
                    }
                    timeout(time: 1, unit: 'HOURS') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }

        stage ('build &amp; push') {
            steps {
                container ('maven') {
                    sh 'cd ruoyi &amp;&amp; mvn -Dmaven.test.skip=true clean package'
                    sh 'cd ruoyi &amp;&amp; docker build -f Dockerfile -t $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER .'
                    withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,credentialsId : &quot;$DOCKER_CREDENTIAL_ID&quot; ,)]) {
                        sh 'echo &quot;$DOCKER_PASSWORD&quot; | docker login $REGISTRY -u &quot;$DOCKER_USERNAME&quot; --password-stdin'
                        sh 'docker push  $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER'
                    }
                }
            }
        }

        stage('push latest'){
           when{
                branch 'master'
           }
           steps{
                container ('maven') {
                  sh 'docker tag  $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:latest '
                  sh 'docker push  $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:latest '
                }
           }
        }

        stage('deploy to dev') {
            when{
                branch 'master'
            }
            steps {
                input(id: 'deploy-to-dev', message: 'deploy to dev?')
                kubernetesDeploy(configs: 'ruoyi/deploy/dev/**', enableConfigSubstitution: true, kubeconfigId: &quot;$KUBECONFIG_CREDENTIAL_ID&quot;)
            }
        }

        stage('push with tag'){
            when{
                expression{
                    return params.TAG_NAME =~ /v.*/
                }
            }
            steps {
                container ('maven') {
                    input(id: 'release-image-with-tag', message: 'release image with tag?')
                    withCredentials([usernamePassword(credentialsId: &quot;$GIT_CREDENTIAL_ID&quot;, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh 'git config --global user.email &quot;xxx&quot; '
                        sh 'git config --global user.name &quot;scott-wong&quot; '
                        sh 'git tag -a $TAG_NAME -m &quot;$TAG_NAME&quot; '
                        sh 'git push https://$GIT_USERNAME:$GIT_PASSWORD@$GIT_URL --tags --ipv4'
                    }
                    sh 'docker tag  $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:$TAG_NAME '
                    sh 'docker push  $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:$TAG_NAME '
                }
            }
        }
    }
}
</code></pre><h2 id="26-应用定义工具helm">2.6 应用定义工具：Helm</h2>
<p>Helm几乎是目前的事实标准，另一种应用定义模型OAM也值得关注。
阿里巴巴宣布联合微软共同推出的开放应用模型项目（Open Application Model - OAM）</p>
]]></content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/categories/%E6%9E%B6%E6%9E%84/" term="架构" label="架构" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/" term="云原生" label="云原生" />
                            
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/togaf/" term="TOGAF" label="TOGAF" />
                            
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/c4%E6%A8%A1%E5%9E%8B/" term="C4模型" label="C4模型" />
                            
                        
                            
                            
                            
                                <category scheme="https://scott-wong.ga/tags/%E6%95%8F%E6%8D%B7/" term="敏捷" label="敏捷" />
                            
                        
                    
                
            
        </entry>
    
</feed>
